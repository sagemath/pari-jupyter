define([
  'codemirror/lib/codemirror',
  'codemirror/addon/mode/simple'
], function (CodeMirror) {
  'use strict';

  function createBuiltinRegularExpression(words) {
    return new RegExp(words.join('(?!\\\\[(),.]?|[\\w@]+)|') + '(?!\\\\[(),.]?|[\\w@]+)', 'm');
  }

  var builtin = createBuiltinRegularExpression(['Catalan', 'Col', 'Colrev', 'Euler', 'I', 'List',
      'Map', 'Mat', 'Mod', 'O', 'O(_^_)', 'Pi', 'Pol', 'Polrev', 'Qfb', 'Ser', 'Set',
      'Str', 'Strchr', 'Strexpand', 'Strprintf', 'Strtex', 'Vec', 'Vecrev', 'Vecsmall', '_avma',
      '_badtype', '_cast', '_cgetg',
      '_const_expr', '_const_quote', '_const_real', '_const_smallreal', '_decl_base',
      '_decl_ext', '_def_TeXstyle', '_def_breakloop', '_def_colors', '_def_compatible',
      '_def_datadir', '_def_debug', '_def_debugfiles', '_def_debugmem', '_def_echo', '_def_factor_add_primes',
      '_def_factor_proven', '_def_format', '_def_graphcolormap', '_def_graphcolors', '_def_help',
      '_def_histfile', '_def_histsize', '_def_lines', '_def_linewrap', '_def_log', '_def_logfile',
      '_def_nbthreads', '_def_new_galois_format', '_def_output', '_def_parisize', '_def_parisizemax',
      '_def_path', '_def_prettyprinter', '_def_primelimit', '_def_prompt', '_def_prompt_cont',
      '_def_psfile', '_def_readline', '_def_realbitprecision', '_def_realprecision', '_def_recover',
      '_def_secure', '_def_seriesprecision', '_def_simplify', '_def_sopath', '_def_strictargs',
      '_def_strictmatch', '_def_threadsize', '_def_threadsizemax', '_def_timer', '_default_check',
      '_default_marker', '_derivfun', '_diffptr', '_err_primes', '_err_type', '_eval_mnemonic',
      '_factor_Aurifeuille', '_factor_Aurifeuille_prime', '_forcomposite_init', '_forcomposite_next',
      '_formatcode', '_forpart_init', '_forpart_next', '_forprime_init', '_forprime_next',
      '_forprime_next_', '_forvec_init', '_forvec_next', '_gc_needed', '_gerepileall',
      '_gerepileupto', '_iferr_CATCH', '_iferr_CATCH_reset', '_iferr_ENDCATCH', '_iferr_error',
      '_iferr_rethrow', '_low_stack_lim', '_maxprime', '_multi_if', '_ndec2nbits', '_ndec2prec',
      '_norange', '_parapply_worker', '_pareval_worker', '_parfor_worker', '_parvector_worker',
      '_polint_worker', '_polmodular_worker', '_proto_code', '_proto_max_args', '_proto_ret',
      '_safecoeff', '_stack_lim', '_strtoclosure', '_tovec', '_tovecprec', '_type_preorder',
      '_typedef', '_u_forprime_init', '_u_forprime_next', '_void_if', '_wrap_G', '_wrap_GG',
      '_wrap_Gp', '_wrap_bG', '_wrap_vG', 'abs', 'acos', 'acosh', 'addhelp', '_~',
      'addprimes', 'agm', 'alarm', 'algabsdim', 'algadd', 'algalgtobasis', 'algaut', 'algb',
      'algbasis', 'algbasistoalg', 'algcenter', 'algcentralproj', 'algchar', 'algcharpoly',
      'algdecomposition', 'algdegree', 'algdep', 'algdim', 'algdisc', 'algdivl', 'algdivr',
      'alggroup', 'alghasse', 'alghassef', 'alghassei', 'algindex', 'alginit', 'alginv',
      'alginvbasis', 'algisassociative', 'algiscommutative', 'algisdivision', 'algisdivl',
      'algisinv', 'algisramified', 'algissemisimple', 'algissimple', 'algissplit', 'alglathnf',
      'algleftmultable', 'algmul', 'algmultable', 'algneg', 'algnorm', 'algpoleval', 'algpow',
      'algprimesubalg', 'algquotient', 'algradical', 'algramifiedplaces', 'algrandom',
      'algrelmultable', 'algsimpledec', 'algsplittingdata', 'algsplittingfield', 'algsplittingmatrix',
      'algsqr', 'algsub', 'algsubalg', 'algtableinit', 'algtensor', 'algtrace', 'algtype',
      'alias', 'allocatemem', 'apply', 'arg', 'asin', 'asinh', 'asympnum', 'atan', 'atanh',
      'bernfrac', 'bernpol', 'bernreal', 'bernvec', 'besselh1', 'besselh2', 'besseli',
      'besselj', 'besseljh', 'besselk', 'besseln', 'bestappr', 'bestapprPade', 'bezout',
      'bezoutres', 'bigomega', 'binary', 'binomial', 'bitand', 'bitneg', 'bitnegimply',
      'bitor', 'bitprecision', 'bittest', 'bitxor', 'bnfcertify', 'bnfcompress', 'bnfdecodemodule',
      'bnfinit', 'bnfisintnorm', 'bnfisnorm', 'bnfisprincipal', 'bnfissunit', 'bnfisunit',
      'bnflog', 'bnflogdegree', 'bnflogef', 'bnfnarrow', 'bnfsignunit', 'bnfsunit', 'bnrL1',
      'bnrchar', 'bnrclassno', 'bnrclassnolist', 'bnrconductor', 'bnrconductorofchar',
      'bnrdisc', 'bnrdisclist', 'bnrgaloisapply', 'bnrgaloismatrix', 'bnrinit', 'bnrisconductor',
      'bnrisgalois', 'bnrisprincipal', 'bnrrootnumber', 'bnrstark', 'break', 'call', 'ceil',
      'centerlift', 'characteristic', 'charconj', 'chardiv', 'chareval', 'charker', 'charmul',
      'charorder', 'charpoly', 'chinese', 'cmp', 'component', 'concat', 'conj', 'conjvec',
      'content', 'contfrac', 'contfraceval', 'contfracinit', 'contfracpnqn', 'core', 'coredisc',
      'cos', 'cosh', 'cotan', 'cotanh', 'dbg_x', 'default', 'denominator', 'deriv', 'derivnum',
      'diffop', 'digits', 'dilog', 'dirdiv', 'direuler', 'dirmul', 'dirzetak', 'divisors',
      'divrem', 'eint1', 'ellL1', 'elladd', 'ellak', 'ellan', 'ellanalyticrank', 'ellap',
      'ellbil', 'ellcard', 'ellchangecurve', 'ellchangepoint', 'ellchangepointinv', 'ellconvertname',
      'elldivpol', 'elleisnum', 'elleta', 'ellformaldifferential', 'ellformalexp', 'ellformallog',
      'ellformalpoint', 'ellformalw', 'ellfromeqn', 'ellfromj', 'ellgenerators', 'ellglobalred',
      'ellgroup', 'ellheegner', 'ellheight', 'ellheightmatrix', 'ellidentify', 'ellinit',
      'ellintegralmodel', 'ellisdivisible', 'ellisogeny', 'ellisogenyapply', 'ellisomat',
      'ellisoncurve', 'ellissupersingular', 'ellj', 'elllocalred', 'elllog', 'elllseries',
      'ellminimalmodel', 'ellminimaltwist', 'ellmoddegree', 'ellmodulareqn', 'ellmul',
      'ellneg', 'ellnonsingularmultiple', 'ellorder', 'ellordinate', 'ellpadicL', 'ellpadicfrobenius',
      'ellpadicheight', 'ellpadicheightmatrix', 'ellpadiclog', 'ellpadics2', 'ellperiods',
      'ellpointtoz', 'ellpow', 'ellrootno', 'ellsea', 'ellsearch', 'ellsigma', 'ellsub',
      'elltaniyama', 'elltatepairing', 'elltors', 'elltwist', 'ellweilpairing', 'ellwp',
      'ellxn', 'ellzeta', 'ellztopoint', 'erfc', 'errname', 'error', 'eta', 'eulerphi',
      'eval', 'exp', 'expm1', 'extern', 'externstr', 'factor', 'factorback', 'factorcantor',
      'factorff', 'factorial', 'factorint', 'factormod', 'factornf', 'factorpadic', 'ffgen',
      'ffinit', 'fflog', 'ffnbirred', 'fforder', 'ffprimroot', 'fibonacci', 'floor', 'fold',
      'for', 'forcomposite', 'fordiv', 'forell', 'forpart', 'forprime', 'forqfvec', 'forstep',
      'forsubgroup', 'forvec', 'frac', 'fromdigits', 'galoisexport', 'galoisfixedfield',
      'galoisgetpol', 'galoisidentify', 'galoisinit', 'galoisisabelian', 'galoisisnormal',
      'galoispermtopol', 'galoissubcyclo', 'galoissubfields', 'galoissubgroups', 'gamma',
      'gammah', 'gammamellininv', 'gammamellininvasymp', 'gammamellininvinit', 'gcd',
      'gcdext', 'genus2red', 'getabstime', 'getenv', 'getheap', 'getrand', 'getstack',
      'gettime', 'getwalltime', 'global', 'hammingweight', 'hilbert', 'hyperellcharpoly',
      'hyperellpadicfrobenius', 'hyperu', 'idealadd', 'idealaddtoone', 'idealappr', 'idealchinese',
      'idealcoprime', 'idealdiv', 'idealfactor', 'idealfactorback', 'idealfrobenius',
      'idealhnf', 'idealintersect', 'idealinv', 'ideallist', 'ideallistarch', 'ideallog',
      'idealmin', 'idealmul', 'idealnorm', 'idealnumden', 'idealpow', 'idealprimedec',
      'idealprincipalunits', 'idealramgroups', 'idealred', 'idealstar', 'idealtwoelt',
      'idealval', 'if', 'iferr', 'imag', 'incgam', 'incgamc', 'inline', 'input', 'install',
      'intcirc', 'intformal', 'intfuncinit', 'intnum', 'intnumgauss', 'intnumgaussinit',
      'intnuminit', 'intnumromb', 'isfundamental', 'ispolygonal', 'ispower', 'ispowerful',
      'isprime', 'isprimepower', 'ispseudoprime', 'ispseudoprimepower', 'issquare', 'issquarefree',
      'istotient', 'kill', 'kronecker', 'lambertw', 'lcm', 'length', 'lex', 'lfun', 'lfunabelianrelinit',
      'lfunan', 'lfunartin', 'lfuncheckfeq', 'lfunconductor', 'lfuncost', 'lfuncreate',
      'lfundiv', 'lfunetaquo', 'lfungenus2', 'lfunhardy', 'lfuninit', 'lfunlambda', 'lfunmfspec',
      'lfunmul', 'lfunorderzero', 'lfunqf', 'lfunrootres', 'lfuntheta', 'lfunthetacost',
      'lfunthetainit', 'lfunzeros', 'lift', 'liftall', 'liftint', 'liftpol', 'limitnum',
      'lindep', 'listcreate', 'listinsert', 'listkill', 'listpop', 'listput', 'listsort',
      'lngamma', 'local', 'localbitprec', 'localprec', 'log', 'logint', 'mapdelete', 'mapget',
      'mapisdefined', 'mapput', 'matadjoint', 'matalgtobasis', 'matbasistoalg', 'matcompanion',
      'matconcat', 'matdet', 'matdetint', 'matdiagonal', 'mateigen', 'matfrobenius', 'mathess',
      'mathilbert', 'mathnf', 'mathnfmod', 'mathnfmodid', 'mathouseholder', 'matid', 'matimage',
      'matimagecompl', 'matindexrank', 'matintersect', 'matinverseimage', 'matisdiagonal',
      'matker', 'matkerint', 'matmuldiagonal', 'matmultodiagonal', 'matpascal', 'matqr',
      'matrank', 'matrix', 'matrixqz', 'matsize', 'matsnf', 'matsolve', 'matsolvemod',
      'matsupplement', 'mattranspose', 'max', 'min', 'minpoly', 'modreverse', 'moebius',
      'msatkinlehner', 'mscuspidal', 'mseisenstein', 'mseval', 'msfromcusp', 'msfromell',
      'msfromhecke', 'msgetlevel', 'msgetsign', 'msgetweight', 'mshecke', 'msinit', 'msissymbol',
      'msnew', 'msomseval', 'mspadicL', 'mspadicinit', 'mspadicmoments', 'mspadicseries',
      'mspathgens', 'mspathlog', 'msqexpansion', 'mssplit', 'msstar', 'mstooms', 'my',
      'newtonpoly', 'next', 'nextprime', 'nfalgtobasis', 'nfbasis', 'nfbasistoalg', 'nfcertify',
      'nfcompositum', 'nfdetint', 'nfdisc', 'nfeltadd', 'nfeltdiv', 'nfeltdiveuc', 'nfeltdivmodpr',
      'nfeltdivrem', 'nfeltmod', 'nfeltmul', 'nfeltmulmodpr', 'nfeltnorm', 'nfeltpow',
      'nfeltpowmodpr', 'nfeltreduce', 'nfeltreducemodpr', 'nfelttrace', 'nfeltval', 'nffactor',
      'nffactorback', 'nffactormod', 'nfgaloisapply', 'nfgaloisconj', 'nfgrunwaldwang',
      'nfhilbert', 'nfhnf', 'nfhnfmod', 'nfinit', 'nfisideal', 'nfisincl', 'nfisisom',
      'nfislocalpower', 'nfkermodpr', 'nfmodpr', 'nfmodprinit', 'nfmodprlift', 'nfnewprec',
      'nfroots', 'nfrootsof1', 'nfsnf', 'nfsolvemodpr', 'nfsplitting', 'nfsubfields',
      'norm', 'norml2', 'normlp', 'numbpart', 'numdiv', 'numerator', 'numtoperm', 'omega',
      'oo', 'padicappr', 'padicfields', 'padicprec', 'parapply', 'pareval', 'parfor',
      'parforprime', 'parforvec', 'parselect', 'parsum', 'partitions', 'parvector', 'permtonum',
      'plot', 'plotbox', 'plotclip', 'plotcolor', 'plotcopy', 'plotcursor', 'plotdraw',
      'ploth', 'plothraw', 'plothsizes', 'plotinit', 'plotkill', 'plotlines', 'plotlinetype',
      'plotmove', 'plotpoints', 'plotpointsize', 'plotpointtype', 'plotrbox', 'plotrecth',
      'plotrecthraw', 'plotrline', 'plotrmove', 'plotrpoint', 'plotscale', 'plotstring',
      'polchebyshev', 'polclass', 'polcoeff', 'polcompositum', 'polcyclo', 'polcyclofactors',
      'poldegree', 'poldisc', 'poldiscreduced', 'polgalois', 'polgraeffe', 'polhensellift',
      'polhermite', 'polinterpolate', 'poliscyclo', 'poliscycloprod', 'polisirreducible',
      'pollead', 'pollegendre', 'polmodular', 'polrecip', 'polred', 'polredabs', 'polredbest',
      'polredord', 'polresultant', 'polresultantext', 'polroots', 'polrootsff', 'polrootsmod',
      'polrootspadic', 'polrootsreal', 'polsturm', 'polsubcyclo', 'polsylvestermatrix',
      'polsym', 'poltchebi', 'poltschirnhaus', 'polylog', 'polzagier', 'powers', 'precision',
      'precprime', 'prime', 'primepi', 'primes', 'print', 'print1', 'printf', 'printsep',
      'printsep1', 'printtex', 'prod', 'prodeuler', 'prodinf', 'psdraw', 'psi', 'psploth',
      'psplothraw', 'qfauto', 'qfautoexport', 'qfbclassno', 'qfbcompraw', 'qfbhclassno',
      'qfbil', 'qfbnucomp', 'qfbnupow', 'qfbpowraw', 'qfbprimeform', 'qfbred', 'qfbredsl2',
      'qfbsolve', 'qfeval', 'qfgaussred', 'qfisom', 'qfisominit', 'qfjacobi', 'qflll',
      'qflllgram', 'qfminim', 'qfnorm', 'qforbits', 'qfparam', 'qfperfection', 'qfrep',
      'qfsign', 'qfsolve', 'quadclassunit', 'quaddisc', 'quadgen', 'quadhilbert', 'quadpoly',
      'quadray', 'quadregulator', 'quadunit', 'ramanujantau', 'random', 'randomprime',
      'read', 'readstr', 'readvec', 'real', 'removeprimes', 'return', 'rnfalgtobasis',
      'rnfbasis', 'rnfbasistoalg', 'rnfcharpoly', 'rnfconductor', 'rnfdedekind', 'rnfdet',
      'rnfdisc', 'rnfeltabstorel', 'rnfeltdown', 'rnfeltnorm', 'rnfeltreltoabs', 'rnfelttrace',
      'rnfeltup', 'rnfequation', 'rnfhnfbasis', 'rnfidealabstorel', 'rnfidealdown', 'rnfidealfactor',
      'rnfidealhnf', 'rnfidealmul', 'rnfidealnormabs', 'rnfidealnormrel', 'rnfidealprimedec',
      'rnfidealreltoabs', 'rnfidealtwoelt', 'rnfidealup', 'rnfinit', 'rnfisabelian', 'rnfisfree',
      'rnfislocalcyclo', 'rnfisnorm', 'rnfisnorminit', 'rnfkummer', 'rnflllgram', 'rnfnormgroup',
      'rnfpolred', 'rnfpolredabs', 'rnfpolredbest', 'rnfpseudobasis', 'rnfsteinitz', 'round',
      'select', 'self', 'seralgdep', 'serconvol', 'serlaplace', 'serprec', 'serreverse',
      'setbinop', 'setintersect', 'setisset', 'setminus', 'setrand', 'setsearch', 'setunion',
      'shift', 'shiftmul', 'sigma', 'sign', 'simplify', 'sin', 'sinc', 'sinh', 'sizebyte',
      'sizedigit', 'solve', 'solvestep', 'sqr', 'sqrt', 'sqrtint', 'sqrtn', 'sqrtnint',
      'stirling', 'subgrouplist', 'subst', 'substpol', 'substvec', 'sum', 'sumalt', 'sumdedekind',
      'sumdigits', 'sumdiv', 'sumdivmult', 'sumformal', 'suminf', 'sumnum', 'sumnuminit',
      'sumnummonien', 'sumnummonieninit', 'sumpos', 'system', 'tan', 'tanh', 'taylor',
      'teichmuller', 'theta', 'thetanullk', 'thue', 'thueinit', 'trace', 'trap', 'truncate',
      'type', 'uninline', 'until', 'valuation', 'varhigher', 'variable', 'variables',
      'varlower', 'vecextract', 'vecmax', 'vecmin', 'vecsearch', 'vecsort', 'vecsum',
      'vector', 'vectorsmall', 'vectorv', 'version', 'warning', 'weber', 'while', 'write',
      'write1', 'writebin', 'writetex', 'zeta', 'zetamult', 'zncharinduce', 'zncharisodd',
      'znchartokronecker', 'znconreychar', 'znconreyconductor', 'znconreyexp', 'znconreylog']);
  var all = /(?:.)/;
  var comment = /(?:\\\\.*)/;
  var literals = /(?:")/;
  var numbers = /(?:\d*\.?\d+(?![\w@\\]))/;

  CodeMirror.defineSimpleMode('gp', {
    start: [
      {regex: comment, token: 'comment'},
      {regex: /\/\*/, token: 'comment', next: 'comment'},
      {regex: literals, token: 'string', next: 'string'},
      {regex: builtin, token: 'keyword'},
      {regex: numbers, token: 'number'},
      {regex: all, token: null}
    ],
    string: [
      {regex: /(?:[^\\"']|\\.)*?"/, token: 'string', next: 'start'},
      {regex: /.*/, token: 'string'}
    ],
    // The multi-line comment state.
    comment: [
      {regex: /.*?\*\//, token: "comment", next: "start"},
      {regex: /.*/, token: "comment"}
    ],
    meta: {lineComment: '\\\\', electricInput: all, dontIndentStates: ['comment']}


  })

  CodeMirror.defineMIME('text/x-pari-gp', 'gp');

});
